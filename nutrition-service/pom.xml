<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.keepcalm.cloud</groupId>
    <artifactId>nutrition-service</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Nutrition Service</name>
    <description>Spring Cloud Nutrition Service</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <kotlin.version>1.2.51</kotlin.version>
        <nexus-staging-maven-plugin.version>1.6.7</nexus-staging-maven-plugin.version>
        <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
        <docker-maven-plugin.version>1.0.0</docker-maven-plugin.version>
        <docker.image.prefix>marzelwidmer</docker.image.prefix>
        <opencsv.version>4.1</opencsv.version>
        <evo-inflector.version>1.2.2</evo-inflector.version>

        <!-- Spring Contracts -->
        <spring-cloud-contract.version>2.0.0.RELEASE</spring-cloud-contract.version>
        <!-- Restdocs -->
        <spring-restdocs-mockmvc.version>2.0.1.RELEASE</spring-restdocs-mockmvc.version>

        <!-- ================= Package / Release ===================== -->
        <!-- Package / Release -->
        <jgitflow-maven-plugin.version>1.0-m5.1</jgitflow-maven-plugin.version>

        <!-- =================  Documentation ================= -->
        <!-- Asciidoc -->
        <asciidoctor.maven.plugin.version>1.5.6</asciidoctor.maven.plugin.version>

        <asciidoctorj-diagram.version>1.5.9</asciidoctorj-diagram.version>
        <asciidoctorj-pdf.version>1.5.0-alpha.16</asciidoctorj-pdf.version>
        <asciidoctorj.version>1.5.4</asciidoctorj.version>
        <snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>

        <!-- Gitlog-->
        <gitlog-maven-plugin.version>1.13.12</gitlog-maven-plugin.version>
        <gitlogDirectory>${project.build.directory}/generated-gitlog</gitlogDirectory>

    </properties>


    <dependencies>
        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- Spring HATEOAS -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>

        <!-- Spring Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Config Client-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <!-- Spring Sleuth-Zipkin -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-sleuth-zipkin</artifactId>
        </dependency>

        <!-- Spring Actuator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Spring Cloud Eureka Client -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!-- EVO -->
        <dependency>
            <groupId>org.atteo</groupId>
            <artifactId>evo-inflector</artifactId>
            <version>${evo-inflector.version}</version>
        </dependency>

        <!-- Spring Data Rest -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>

        <!-- Spring Data MongoDB-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>


        <!-- Open CSV -->
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>${opencsv.version}</version>
        </dependency>

        <!-- Kotlin -->
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Contracts -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-contract-verifier</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <version>${spring-restdocs-mockmvc.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- Contracts -->
            <plugin>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-contract-maven-plugin</artifactId>
                <version>${spring-cloud-contract.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <baseClassForTests>
                        ch.keepcalm.cloud.service.nutrition.BaseTestClass
                    </baseClassForTests>
                </configuration>
            </plugin>

            <!-- JGitFlow-->
            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <version>${jgitflow-maven-plugin.version}</version>
                <configuration>
                    <pushFeatures>true</pushFeatures>
                    <pushReleases>true</pushReleases>
                    <pushHotfixes>true</pushHotfixes>
                    <suppressFastForward>true</suppressFastForward>
                    <scmCommentPrefix>jgf:</scmCommentPrefix>
                    <!--enforce line ending-->
                    <eol>lf</eol>
                </configuration>
            </plugin>

            <!-- ===== Documentation ASCIIDOC ===== -->
            <!-- Gitlog -->
            <plugin>
                <groupId>com.github.danielflower.mavenplugins</groupId>
                <artifactId>gitlog-maven-plugin</artifactId>
                <version>${gitlog-maven-plugin.version}</version>
                <configuration>
                    <verbose>true</verbose>
                    <reportTitle>${project.version}</reportTitle>
                    <issueManagementSystem>jira</issueManagementSystem>
                    <issueManagementUrl>https://portal.helsana.ch/jira/browse/CONF/</issueManagementUrl>

                    <fullGitMessage>false</fullGitMessage>

                    <mergeCommitFilter>false</mergeCommitFilter>
                    <excludeCommitsPattern>^((?!feature.*).)*$</excludeCommitsPattern>

                    <!--<excludeCommitsPattern>^(?!Merge branch.*).*$</excludeCommitsPattern>-->
                    <!--<excludeCommitsPattern>^((?!MYH-.*).)*$</excludeCommitsPattern>-->

                    <outputDirectory>${gitlogDirectory}</outputDirectory>
                    <asciidocChangeLogFilename>releaseNotes.adoc</asciidocChangeLogFilename>
                    <generatAsciidocChangeLog>true</generatAsciidocChangeLog>

                    <generateJSONChangeLog>true</generateJSONChangeLog>
                    <generateHTMLTableOnlyChangeLog>true</generateHTMLTableOnlyChangeLog>
                    <generateMarkdownChangeLog>true</generateMarkdownChangeLog>
                    <generateSimpleHTMLChangeLog>true</generateSimpleHTMLChangeLog>
                    <generatePlainTextChangeLog>true</generatePlainTextChangeLog>

                    <dateFormat>yyyy-MM-dd HH:mm</dateFormat>
                    <asciidocTableView>true</asciidocTableView>
                    <asciidocHeading>===</asciidocHeading>
                    <asciidocTableViewHeader1>Date</asciidocTableViewHeader1>
                    <asciidocTableViewHeader2>Changes</asciidocTableViewHeader2>
                </configuration>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- AsciiDoc -->
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor.maven.plugin.version}</version>

                <dependencies>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>${asciidoctorj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-diagram</artifactId>
                        <version>${asciidoctorj-diagram.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-pdf</artifactId>
                        <version>${asciidoctorj-pdf.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceDirectory>src/docs/asciidoc</sourceDirectory>
                    <attributes>
                        <endpoint-url>http://nexusvm.cloudapp.net/service/rest/repository/browse/maven-site/ch/keepcalm/services/nutrition-service/</endpoint-url>
                        <sourcedir>${project.build.sourceDirectory}</sourcedir>
                        <sourcedirKotlin>${project.basedir}/src/main/kotlin</sourcedirKotlin>
                        <gitlogdir>${gitlogDirectory}</gitlogdir>
                        <project-version>${project.version}</project-version>
                        <project-name>${project.name}</project-name>
                        <project-artifact-name>${project.name}-${project.version}</project-artifact-name>
                        <snippets>${snippetsDirectory}</snippets>
                    </attributes>

                </configuration>

                <!-- PDF -->
                <executions>
                    <execution>
                        <id>generate-pdf-doc</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>pdf</backend>
                            <sourceHighlighter>coderay</sourceHighlighter>
                            <sourceDirectory>src/docs/asciidoc</sourceDirectory>
                            <baseDir>src/docs/resources</baseDir>
                            <requires>
                                <require>asciidoctor-diagram</require>
                            </requires>
                            <attributes>
                                <imagesdir>${project.build.directory}/generated-docs/images</imagesdir>
                                <imagesoutdir>${project.build.directory}/generated-docs/images</imagesoutdir>
                                <icons>font</icons>
                                <pagenums />
                                <toc />
                                <idprefix />
                                <idseparator>-</idseparator>
                            </attributes>
                        </configuration>
                    </execution>

                    <!-- HTML5 -->
                    <execution>
                        <id>asciidoc-to-html</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html5</backend>
                            <sourceHighlighter>coderay</sourceHighlighter>
                            <sourceDirectory>src/docs/asciidoc</sourceDirectory>
                            <baseDir>src/docs/resources</baseDir>
                            <requires>
                                <require>asciidoctor-diagram</require>
                            </requires>
                            <attributes>
                                <imagesdir>./images</imagesdir>
                                <toc>left</toc>
                                <icons>font</icons>
                                <sectanchors>true</sectanchors>
                                <idprefix />
                                <idseparator>-</idseparator>
                                <docinfo1>true</docinfo1>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Spring-Boot -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Git information -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>

            <!-- Kotlin -->
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>src/main/kotlin</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>src/test/kotlin</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <groupId>org.jetbrains.kotlin</groupId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Docker-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-maven-plugin.version}</version>
                <configuration>

                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <serverId>docker-hub</serverId>
                    <registryUrl>https://index.docker.io/v1/</registryUrl>

                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>

            <!-- Nexus -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>${nexus-staging-maven-plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>nexus</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>

