spring:
  security:
    user:
      name: "eureka"
      password: "password"

# by default every Eureka Server is also an Eureka Client and requires (at least one) service URL to locate a peer.
eureka:
  instance:
    hostname: localhost
    metadata-map:
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
  client:
    registerWithEureka: false
    fetchRegistry: false
    service-url:
       defaultZone: ${EUREKA_SERVICE_URL:http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/}


management:
  endpoints:
    web.exposure.include: "*"
  endpoint:
    health:
      show-details: ALWAYS

# Logging
logging:
  pattern:
     console: "%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint}
          %clr([${spring.zipkin.service.name:${spring.application.name:-}},){magenta}%clr(%X{X-B3-TraceId:-},){yellow}%clr(%X{X-B3-SpanId:-},){cyan}%clr(,%X{X-Span-Export:-}]){blue}%clr([%8.15t]){cyan}
          %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n"